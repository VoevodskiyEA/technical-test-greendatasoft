{"version":3,"sources":["store/employee.tsx","components/Table/Table.tsx","components/NewRow/NewRow.tsx","components/Main/Main.tsx","components/AlertTemplate/BaseIcon.tsx","components/AlertTemplate/Close.tsx","components/AlertTemplate/ErrorIcon.tsx","components/AlertTemplate/InfoIcon.tsx","components/AlertTemplate/SuccessIcon.tsx","components/AlertTemplate/AlertTemplate.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["defaultValue","key","surname","name","patronymic","position","birthDay","gender","employmentDate","dismissalDate","rights","collegues","register","this","setLocalStorage","makeAutoObservable","localData","localStorage","getItem","JSON","parse","employee","push","filter","stringify","length","newArray","jsonArray","setItem","EditableCell","editing","dataIndex","title","inputType","children","record","index","restProps","inputNode","Item","style","margin","rules","required","message","Table","observer","useState","mobData","setMobData","Form","useForm","form","editingKey","setEditingKey","isEditing","cancel","save","a","validateFields","row","newData","findIndex","item","splice","console","log","mergedColumns","width","editable","render","_","Link","onClick","marginRight","onConfirm","disabled","setFieldsValue","age","address","edit","currentLength","map","correct","el","changeRegister","col","onCell","useEffect","jsonData","component","components","body","cell","bordered","dataSource","columns","rowClassName","pagination","onChange","NewRow","display","NewRowData","getLastKey","validNewRowData","alert","useAlert","setSurname","setName","patronomic","setPatronomic","setPosition","setBirthDay","setGender","setEmploymentDate","setDismissalDate","setRights","setCollegues","updateValue","colleguesArr","i","handleUpload","e","result","haveFalsy","toString","arrayValues","Object","values","validateRequired","dateDiff","employment","dismissal","split","employmentYear","employmentMonth","employmentDay","dismissalYear","dismissalMonth","dismissalDay","handleDate","birth","birthYear","birthMonth","birthlDay","checkBirthDay","addEmployee","success","error","Option","Select","colleguesRegister","value","className","placeholder","target","date","dateString","Group","options","label","checkedValues","mode","allowClear","Header","Layout","Content","Footer","Title","Typography","Main","props","showNewRow","setShowNewRow","id","setDefaultLocalStorage","BaseIcon","color","pushRight","xmlns","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","minWidth","CloseIcon","x1","y1","x2","y2","ErrorIcon","cx","cy","r","InfoIcon","SuccessIcon","d","points","alertStyle","backgroundColor","padding","textTransform","borderRadius","justifyContent","alignItems","boxShadow","fontFamily","boxSizing","buttonStyle","marginLeft","border","cursor","AlertTemplate","close","type","Close","positions","BOTTOM_RIGHT","timeout","offset","transition","transitions","SCALE","App","template","exact","path","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1e089a8.chunk.js","sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\nimport { DataType } from \"../App\";\r\nclass Employee {\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n  defaultValue = [\r\n    {\r\n      key: \"1\",\r\n      surname: \"Stahelski\",\r\n      name: \"Chad\",\r\n      patronymic: \"F.\",\r\n      position: \"Film director\",\r\n      birthDay: \"1968-09-19\",\r\n      gender: \"male\",\r\n      employmentDate: \"1993-03-31\",\r\n      dismissalDate: \"Employed until the present\",\r\n      rights: [1],\r\n      collegues: [\"Keanu Reeves\"],\r\n    },\r\n    {\r\n      key: \"2\",\r\n      surname: \"Keanu\",\r\n      name: \"Reeves\",\r\n      patronymic: \"Henry\",\r\n      position: \"Actor\",\r\n      birthDay: \"1964-09-02\",\r\n      gender: \"male\",\r\n      employmentDate: \"1984-03-15\",\r\n      dismissalDate: \"Employed until the present\",\r\n      rights: [0],\r\n      collegues: [\"Chad Stahelski\"],\r\n    },\r\n  ];\r\n\r\n  setLocalStorage() {\r\n    const localData = localStorage.getItem(\"employee\");\r\n    return localData ? JSON.parse(localData) : this.defaultValue;\r\n  }\r\n  register: Array<DataType> = this.setLocalStorage();\r\n  addEmployee(employee: any) {\r\n    this.register.push(employee);\r\n  }\r\n  removeEmployee(key: any) {\r\n    this.register = this.register.filter((employee) => employee.key !== key);\r\n  }\r\n  getReg() {\r\n    return JSON.stringify(this.register);\r\n  }\r\n  getLastKey() {\r\n    if (this.register.length === 0) {\r\n      return \"1\";\r\n    } else {\r\n      return JSON.stringify(+this.register[this.register.length - 1].key + 1);\r\n    }\r\n  }\r\n  changeRegister(newArray: Array<any>) {\r\n    let jsonArray = JSON.stringify(newArray);\r\n    this.register = newArray;\r\n    localStorage.setItem(\"employee\", jsonArray);\r\n  }\r\n  setDefaultLocalStorage() {\r\n    this.register = this.defaultValue;\r\n    localStorage.setItem(\"employee\", JSON.stringify(this.register));\r\n  }\r\n}\r\n\r\nexport default new Employee();\r\n","import { useEffect, useState } from \"react\";\r\nimport {\r\n  Table as TableANT,\r\n  Input,\r\n  InputNumber,\r\n  Popconfirm,\r\n  Form,\r\n  Typography,\r\n  Button,\r\n} from \"antd\";\r\nimport employee from \"../../store/employee\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface Item {\r\n  key: string;\r\n  surname: string;\r\n  name: string;\r\n  patronymic: string;\r\n  position: string;\r\n  birthDay: any;\r\n  gender: string;\r\n  employmentDate: any;\r\n  dismissalDate: string;\r\n  rights: Array<number>;\r\n}\r\n\r\ninterface EditableCellProps extends React.HTMLAttributes<HTMLElement> {\r\n  editing: boolean;\r\n  dataIndex: string;\r\n  title: any;\r\n  inputType: \"number\" | \"text\";\r\n  record: Item;\r\n  index: number;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst EditableCell: React.FC<EditableCellProps> = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\r\n\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{ margin: 0 }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst Table = observer(() => {\r\n  const [mobData, setMobData] = useState<Item[]>(employee.register);\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n\r\n  const isEditing = (record: Item) => record.key === editingKey;\r\n\r\n  const edit = (record: Partial<Item> & { key: React.Key }) => {\r\n    form.setFieldsValue({ name: \"\", age: \"\", address: \"\", ...record });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey(\"\");\r\n  };\r\n\r\n  const save = async (key: React.Key) => {\r\n    try {\r\n      const row = (await form.validateFields()) as Item;\r\n      const newData = [...mobData];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...row,\r\n        });\r\n        setMobData(newData);\r\n        setEditingKey(\"\");\r\n      } else {\r\n        newData.push(row);\r\n        setMobData(newData);\r\n        setEditingKey(\"\");\r\n      }\r\n    } catch (errInfo) {\r\n      console.log(\"Validate Failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Surname\",\r\n      dataIndex: \"surname\",\r\n      width: 150,\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      width: 150,\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"Patronymic\",\r\n      dataIndex: \"patronymic\",\r\n      width: 150,\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"Position\",\r\n      dataIndex: \"position\",\r\n      width: 150,\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"Birth day\",\r\n      dataIndex: \"birthDay\",\r\n      width: 130,\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"Gender\",\r\n      dataIndex: \"gender\",\r\n      width: 100,\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"Employment date\",\r\n      dataIndex: \"employmentDate\",\r\n      width: 130,\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"Dismissal date\",\r\n      dataIndex: \"dismissalDate\",\r\n      width: 130,\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"Rights\",\r\n      dataIndex: \"rights\",\r\n      width: 150,\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"Collegues\",\r\n      dataIndex: \"collegues\",\r\n      width: 150,\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"Change\",\r\n      dataIndex: \"operation\",\r\n      width: 115,\r\n      render: (_: any, record: Item) => {\r\n        const editable = isEditing(record);\r\n        return editable ? (\r\n          <span>\r\n            <Typography.Link\r\n              onClick={() => save(record.key)}\r\n              style={{ marginRight: 8 }}\r\n            >\r\n              Save\r\n            </Typography.Link>\r\n\r\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\r\n              <Typography.Link>Cancel</Typography.Link>\r\n            </Popconfirm>\r\n          </span>\r\n        ) : (\r\n          <Typography.Link\r\n            disabled={editingKey !== \"\"}\r\n            onClick={() => edit(record)}\r\n          >\r\n            Edit\r\n          </Typography.Link>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Erase\",\r\n      dataIndex: \"operation\",\r\n      width: 110,\r\n      render: (_: any, record: Item) => {\r\n        return (\r\n          <Button\r\n            onClick={() => {\r\n              const currentLength = +mobData\r\n                .map((item, index) => {\r\n                  let correct;\r\n                  if (item.key === record.key) {\r\n                    correct = index;\r\n                  }\r\n                  return correct\r\n                })\r\n                .filter((el) => el != null);\r\n\r\n              mobData.splice(currentLength, 1);\r\n              employee.changeRegister(mobData);\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n    return {\r\n      ...col,\r\n      onCell: (record: Item) => ({\r\n        record,\r\n        inputType: col.dataIndex === \"age\" ? \"number\" : \"text\",\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    employee.setLocalStorage();\r\n    console.log(EditableCell);\r\n  }, []);\r\n  useEffect(() => {\r\n    let jsonData = JSON.stringify(employee.register);\r\n    localStorage.setItem(\"employee\", jsonData);\r\n    setMobData(JSON.parse(jsonData));\r\n  }, [JSON.stringify(employee.register)]);\r\n\r\n  useEffect(() => {\r\n    employee.changeRegister(mobData);\r\n  }, [JSON.stringify(mobData)]);\r\n\r\n  return (\r\n    <>\r\n      <Form form={form} component={false}>\r\n        <TableANT\r\n          components={{\r\n            body: {\r\n              cell: EditableCell,\r\n            },\r\n          }}\r\n          bordered\r\n          dataSource={mobData}\r\n          columns={mergedColumns}\r\n          rowClassName=\"editable-row\"\r\n          pagination={{\r\n            onChange: cancel,\r\n          }}\r\n        />\r\n      </Form>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Table;\r\n","import { useState } from \"react\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { DatePicker, Radio, Input, Button, Checkbox, Select } from \"antd\";\r\nimport { DataType } from \"../../App\";\r\nimport employee from \"../../store/employee\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface Props {\r\n  display: boolean;\r\n}\r\n\r\ninterface ValidType {\r\n  surname: string;\r\n  name: string;\r\n  position: string;\r\n  birthDay: any;\r\n  gender: string;\r\n  employmentDate: any;\r\n  rights: Array<number>;\r\n  [key: string]: any;\r\n}\r\n\r\nconst NewRow = observer(({ display }: Props) => {\r\n  let defaultValue: DataType = {\r\n    key: employee.getLastKey(),\r\n    surname: \"\",\r\n    name: \"\",\r\n    patronymic: \"\",\r\n    position: \"\",\r\n    birthDay: \"\",\r\n    gender: \"male\",\r\n    employmentDate: \"\",\r\n    dismissalDate: \"\",\r\n    rights: [],\r\n    collegues: [],\r\n  };\r\n  let NewRowData: DataType = defaultValue;\r\n  let validNewRowData: ValidType = {\r\n    surname: \"\",\r\n    name: \"\",\r\n    position: \"\",\r\n    birthDay: \"\",\r\n    gender: \"\",\r\n    employmentDate: \"\",\r\n    rights: [],\r\n  };\r\n  const alert = useAlert();\r\n  const [surname, setSurname] = useState(NewRowData.surname);\r\n  const [name, setName] = useState(NewRowData.name);\r\n  const [patronomic, setPatronomic] = useState(NewRowData.patronymic);\r\n  const [position, setPosition] = useState(NewRowData.position);\r\n  const [birthDay, setBirthDay] = useState(NewRowData.birthDay);\r\n  const [gender, setGender] = useState(NewRowData.gender);\r\n  const [employmentDate, setEmploymentDate] = useState(\r\n    NewRowData.employmentDate\r\n  );\r\n  const [dismissalDate, setDismissalDate] = useState(NewRowData.dismissalDate);\r\n  const [rights, setRights] = useState(NewRowData.rights);\r\n  const [collegues, setCollegues] = useState([]);\r\n\r\n  const options = [\r\n    { label: \"Admin\", value: 1 },\r\n    { label: \"User\", value: 0 },\r\n  ];\r\n\r\n  function updateValue() {\r\n    let colleguesArr = [];\r\n    NewRowData.surname = surname;\r\n    NewRowData.name = name;\r\n    NewRowData.patronymic = patronomic;\r\n    NewRowData.position = position;\r\n    NewRowData.birthDay = birthDay;\r\n    NewRowData.gender = gender;\r\n    NewRowData.employmentDate = employmentDate;\r\n    NewRowData.dismissalDate = dismissalDate;\r\n    NewRowData.rights =\r\n      rights.length === 2 ? [rights[0] + \", \" + rights[1]] : [rights[0]];\r\n    for (let i: number = 0; i < collegues.length; i++) {\r\n      if (i + 1 !== collegues.length) {\r\n        colleguesArr[i] =\r\n          JSON.parse(collegues[i]).surname +\r\n          \" \" +\r\n          JSON.parse(collegues[i]).name +\r\n          \", \";\r\n      } else {\r\n        colleguesArr[i] =\r\n          JSON.parse(collegues[i]).surname +\r\n          \" \" +\r\n          JSON.parse(collegues[i]).name;\r\n      }\r\n    }\r\n    NewRowData.collegues = colleguesArr;\r\n\r\n    if (NewRowData.dismissalDate === \"\") {\r\n      NewRowData.dismissalDate = \"Employed until the present\";\r\n    }\r\n  }\r\n\r\n  function updateValid() {\r\n    validNewRowData.surname = NewRowData.surname;\r\n    validNewRowData.name = NewRowData.name;\r\n    validNewRowData.position = NewRowData.position;\r\n    validNewRowData.birthDay = NewRowData.birthDay;\r\n    validNewRowData.gender = NewRowData.gender;\r\n    validNewRowData.employmentDate = NewRowData.employmentDate;\r\n    validNewRowData.dismissalDate = NewRowData.dismissalDate;\r\n    validNewRowData.rights = NewRowData.rights;\r\n  }\r\n\r\n  function validateRequired(e: any) {\r\n    let result;\r\n    function haveFalsy(e: any) {\r\n      if (e.toString() === \"\") {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    const arrayValues = Object.values(e);\r\n    for (let i: number = 0; i < arrayValues.length; i++) {\r\n      result = haveFalsy(arrayValues[i]);\r\n      if (result) {\r\n        break;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  function checkBirthDay(birth: any, employment: any) {\r\n    const [birthYear, birthMonth, birthlDay] = birth.split(\"-\");\r\n    const [employmentYear, employmentMonth, employmentDay] = employment.split(\r\n      \"-\"\r\n    );\r\n\r\n    if (+employmentYear - +birthYear > 16) {\r\n      return true;\r\n    } else if (+employmentYear - +birthYear === 16) {\r\n      if (+employmentMonth > +birthMonth) {\r\n        return true;\r\n      } else if (+employmentMonth === +birthMonth) {\r\n        if (+employmentDay >= +birthlDay) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function handleDate(employment: any, dismissal: any) {\r\n    const [employmentYear, employmentMonth, employmentDay] = employment.split(\r\n      \"-\"\r\n    );\r\n    const [dismissalYear, dismissalMonth, dismissalDay] = dismissal.split(\"-\");\r\n\r\n    if (+employmentYear > +dismissalYear) {\r\n      return false;\r\n    } else if (+employmentYear === +dismissalYear) {\r\n      if (+employmentMonth > +dismissalMonth) {\r\n        return false;\r\n      } else if (+employmentMonth === +dismissalMonth) {\r\n        if (+employmentDay > +dismissalDay) {\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      } else {\r\n        return true;\r\n      }\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  function handleUpload() {\r\n    updateValue();\r\n    updateValid();\r\n    const required = validateRequired(validNewRowData);\r\n    const dateDiff = handleDate(\r\n      NewRowData.employmentDate,\r\n      NewRowData.dismissalDate\r\n    );\r\n    const birthDay = checkBirthDay(\r\n      NewRowData.birthDay,\r\n      NewRowData.employmentDate\r\n    );\r\n\r\n    if (!required && dateDiff && birthDay) {\r\n      employee.addEmployee(NewRowData);\r\n      alert.success(\"New employee added\");\r\n    } else if (required) {\r\n      alert.error(\"Fill all fields\");\r\n    } else if (!dateDiff) {\r\n      alert.error(\"Enter valid date\");\r\n    } else {\r\n      alert.error(\"Cannot hire minors\");\r\n    }\r\n  }\r\n\r\n  function getRights(e: Array<any>) {\r\n    console.log(e);\r\n    e.length === 1 ? setRights([+e]) : setRights(e);\r\n  }\r\n\r\n  const { Option } = Select;\r\n\r\n  const colleguesRegister = [];\r\n  for (let i: number = 0; i < employee.register.length; i++) {\r\n    colleguesRegister.push(\r\n      <Option\r\n        key={employee.register[i].key}\r\n        value={JSON.stringify(employee.register[i])}\r\n      >\r\n        {employee.register[i].surname + \" \" + employee.register[i].name}\r\n      </Option>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={` ${display ? \"\" : \"display-none\"}`}>\r\n      <Input\r\n        name={\"surname\"}\r\n        placeholder=\"Surname\"\r\n        onChange={(e) => setSurname(e.target.value)}\r\n        value={surname}\r\n      />\r\n      <Input\r\n        name={\"name\"}\r\n        placeholder=\"Name\"\r\n        onChange={(e) => {\r\n          setName(e.target.value);\r\n        }}\r\n        value={name}\r\n      />\r\n      <Input\r\n        name={\"patronymic\"}\r\n        placeholder=\"Patronymic\"\r\n        onChange={(e) => {\r\n          setPatronomic(e.target.value);\r\n        }}\r\n        value={patronomic}\r\n      />\r\n      <Input\r\n        name={\"position\"}\r\n        placeholder=\"Position\"\r\n        onChange={(e) => {\r\n          setPosition(e.target.value);\r\n        }}\r\n        value={position}\r\n      />\r\n      <DatePicker\r\n        placeholder=\"Birthday\"\r\n        onChange={(date: moment.Moment | null, dateString: string) =>\r\n          setBirthDay(dateString)\r\n        }\r\n      />\r\n      <Radio.Group onChange={(e) => setGender(e.target.value)} value={gender}>\r\n        <Radio value=\"male\">Male</Radio>\r\n        <Radio value=\"female\">Female</Radio>\r\n      </Radio.Group>\r\n      <DatePicker\r\n        placeholder=\"Employment date\"\r\n        onChange={(date: moment.Moment | null, dateString: string) =>\r\n          setEmploymentDate(dateString)\r\n        }\r\n      />\r\n      <DatePicker\r\n        placeholder=\"Dismissal date\"\r\n        onChange={(date: moment.Moment | null, dateString: string) =>\r\n          setDismissalDate(dateString)\r\n        }\r\n      />\r\n      <Checkbox.Group\r\n        options={options}\r\n        defaultValue={[\"Pear\"]}\r\n        onChange={(checkedValues) => getRights(checkedValues)}\r\n      />\r\n      <Select\r\n        mode=\"multiple\"\r\n        allowClear\r\n        style={{ width: \"100%\" }}\r\n        placeholder=\"Please select\"\r\n        defaultValue={[]}\r\n        onChange={(e) => setCollegues(e)}\r\n      >\r\n        {colleguesRegister}\r\n      </Select>\r\n      <Button onClick={() => handleUpload()}>Add new row</Button>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default NewRow;\r\n","import { useState } from \"react\";\r\nimport employee from \"../../store/employee\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Table from \"../Table/Table\";\r\nimport NewRow from \"../NewRow/NewRow\";\r\nimport { Layout, Button, Typography } from \"antd\";\r\n\r\nconst { Header, Content, Footer } = Layout;\r\nconst { Title } = Typography;\r\n\r\ninterface Props {}\r\n\r\nconst Main = observer((props: Props) => {\r\n  const [showNewRow, setShowNewRow] = useState(false);\r\n  return (\r\n    <div className=\"main\">\r\n      <Layout className=\"main__layout\">\r\n        <Header className=\"main__layout__header\"><Title id=\"brand\">GreenData</Title></Header>\r\n        <Content className=\"main__layout__content\">\r\n          <Button onClick={() => setShowNewRow(!showNewRow)}>Add new</Button>\r\n          <Button onClick={() => employee.setDefaultLocalStorage()}>\r\n            Set default localStorage\r\n          </Button>\r\n          <NewRow display={showNewRow} />\r\n          <Table />\r\n        </Content>\r\n        <Footer className=\"main__layout__footer\" style={{}}>\r\n          Ant Design ©2018 Created by Ant UED\r\n        </Footer>\r\n      </Layout>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Main;\r\n","const BaseIcon = ({ color, pushRight = true, children }: any) => (\r\n  <svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    width='24'\r\n    height='24'\r\n    viewBox='0 0 24 24'\r\n    fill='none'\r\n    stroke={color}\r\n    strokeWidth='2'\r\n    strokeLinecap='round'\r\n    strokeLinejoin='round'\r\n    style={{ marginRight: pushRight ? '20px' : '0', minWidth: 24 }}\r\n  >\r\n    {children}\r\n  </svg>\r\n)\r\n\r\nexport default BaseIcon","import React from 'react'\r\nimport BaseIcon from './BaseIcon'\r\n\r\nconst CloseIcon = () => (\r\n  <BaseIcon color='#FFFFFF' pushRight={false}>\r\n    <line x1='18' y1='6' x2='6' y2='18' />\r\n    <line x1='6' y1='6' x2='18' y2='18' />\r\n  </BaseIcon>\r\n)\r\n\r\nexport default CloseIcon","import React from 'react'\r\nimport BaseIcon from './BaseIcon'\r\n\r\nconst ErrorIcon = () => (\r\n  <BaseIcon color='#FF0040'>\r\n    <circle cx='12' cy='12' r='10' />\r\n    <line x1='12' y1='8' x2='12' y2='12' />\r\n    <line x1='12' y1='16' x2='12' y2='16' />\r\n  </BaseIcon>\r\n)\r\n\r\nexport default ErrorIcon","import BaseIcon from './BaseIcon'\r\n\r\nconst InfoIcon = () => (\r\n  <BaseIcon color='#2E9AFE'>\r\n    <circle cx='12' cy='12' r='10' />\r\n    <line x1='12' y1='16' x2='12' y2='12' />\r\n    <line x1='12' y1='8' x2='12' y2='8' />\r\n  </BaseIcon>\r\n)\r\n\r\nexport default InfoIcon","import BaseIcon from './BaseIcon'\r\n\r\nconst SuccessIcon = () => (\r\n  <BaseIcon color='#31B404'>\r\n    <path d='M22 11.08V12a10 10 0 1 1-5.93-9.14' />\r\n    <polyline points='22 4 12 14.01 9 11.01' />\r\n  </BaseIcon>\r\n)\r\n\r\nexport default SuccessIcon","import CloseIcon from './Close'\r\nimport ErrorIcon from './ErrorIcon'\r\nimport InfoIcon from './InfoIcon'\r\nimport SuccessIcon from './SuccessIcon'\r\n\r\n\r\n// interface optionsType{\r\n//   position: string,\r\n//   timeout: number,\r\n//   offset: string, \r\n//   transition: string\r\n// }\r\n\r\n// interface Props {\r\n//   style: string,\r\n//   options: optionsType,\r\n//   message: string,\r\n\r\n// }\r\n\r\nconst alertStyle = {\r\n  backgroundColor: '#151515',\r\n  color: 'white',\r\n  padding: '10px',\r\n  textTransform: 'uppercase',\r\n  borderRadius: '3px',\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  boxShadow: '0px 2px 2px 2px rgba(0, 0, 0, 0.03)',\r\n  fontFamily: 'Arial',\r\n  width: '300px',\r\n  boxSizing: 'border-box'\r\n}\r\n\r\nconst buttonStyle = {\r\n  marginLeft: '20px',\r\n  border: 'none',\r\n  backgroundColor: 'transparent',\r\n  cursor: 'pointer',\r\n  color: '#FFFFFF'\r\n}\r\n\r\nconst AlertTemplate = ({ style, options, message, close }:any ) => {\r\n\r\n  return(\r\n    <div style={{ ...alertStyle, ...style }}>\r\n      {options.type === 'info' && <InfoIcon />}\r\n      {options.type === 'success' && <SuccessIcon />}\r\n      {options.type === 'error' && <ErrorIcon />}\r\n      {message}\r\n      <button style={buttonStyle} onClick={close}><CloseIcon /></button>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default AlertTemplate","import \"./scss/App.scss\";\r\nimport \"antd/dist/antd.css\";\r\nimport Main from \"./components/Main/Main\";\r\nimport { positions, Provider as AlertProvider, transitions } from \"react-alert\";\r\nimport AlertTemplate from \"./components/AlertTemplate/AlertTemplate\";\r\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\r\n\r\nexport interface DataType {\r\n  key: string;\r\n  surname: string;\r\n  name: string;\r\n  patronymic: string;\r\n  position: string;\r\n  birthDay: any;\r\n  gender: string;\r\n  employmentDate: any;\r\n  dismissalDate: string;\r\n  rights: Array<any>;\r\n  collegues?: Array<any> | string;\r\n  [key: string]: any;\r\n}\r\n\r\nconst options: any = {\r\n  position: positions.BOTTOM_RIGHT,\r\n  timeout: 3000,\r\n  offset: \"30px\",\r\n  transition: transitions.SCALE,\r\n  type: \"error\",\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <AlertProvider template={AlertTemplate} {...options}>\r\n        <Router>\r\n          <Route exact path=\"/technical-test-greendatasoft/\">\r\n            <Main />\r\n          </Route>\r\n          <Route>\r\n            <Redirect to=\"/technical-test-greendatasoft/\" />\r\n          </Route>\r\n        </Router>\r\n      </AlertProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './scss/Default.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}